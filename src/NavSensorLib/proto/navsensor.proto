// Protocol-Buffers file defining format of sensor measurements for sending of serial line and saving in file

syntax = "proto2";


// Sensor ID Class
message SensorID{
    optional int32 num = 1;
    optional string name = 2 [(nanopb).max_size = 40];
}

// Time and Duration types matching ROS classes
message Time{
    optional uint32 sec = 1;
    optional uint32 nsec = 2;    
}// todo union style support for various time types such as integer:fractional (OSC) messages

message Duration{
    optional int32 sec = 1;
    optional int32 nsec = 2;    
}

message Displacement{
    required float x = 1;
    required float y = 2;
    optional Duration t= 3; 
}


message SensorStatus{
    optional uint8 motion = 1;      // [mot|fault|LaserPowerValid|opmode1,opmode0|framepixfirst]
    optional uint8 observation = 2; // 0xFF = running, 0x00 = no response
} 

message PixelStatistics{
    optional uint8 min = 1;      // min pixel intensity : [0,127]
    optional uint8 mean = 2;     // mean = sumH * 512/900  or sumH/1.76 : [0,223]
    optional uint8 max = 3;      // max intensity : [0,127]
    optional uint16 features = 4; // number of features (actual count = feature * 4) : [0,169]
} 

message PeriodMicros{
    optional uint16 shutter = 1; // microseconds
    optional uint16 frame = 2;   // microseconds
} 

message AdditionalInfo{
    optional SensorStatus status = 1;   // raw bitfields from status registers
    optional PixelStatistics pixel = 2; // image-stats -> min,mean,max,features
    optional PeriodMicros period = 3;   // length of shutter and frame period in microseconds
} 

message Sample{
    optional SensorID id = 1;
    optional int32 count = 2;    
    optional Time timestamp = 3;    
    optional Displacement displacement = 4;
    optional Position position = 5;
    optional AdditionalInfo info = 6;
} 

message DisplacementBundle{
    optional int32 count = 1;    
    optional Time timestamp = 2;    
    repeated Displacement displacement = 3 [(nanopb).max_count = 8];
}

// OPTIONS
// ----- in file -> navsensor.options
//  DataPacket.name         max-size:40
//  DataPacket.data         max_count:16
//  DataPacket.timestamp    fixed_length:true
//
// ----- inline
//  required string name = 1 [(nanopb).max_size = 40];
//  repeated int32 ids = 4   [(nanopb).max_count = 5];